successfully obtained license
failed to connect to server
filename = ARGS[1] = "case118.m"
dirname = ARGS[2] = "results118"
quantity_to_approx = ARGS[3] = "line_real_power"
linenum = convert(Int64, parse(Float64, ARGS[4])) = 134
inflation_const = parse(Float64, ARGS[5]) = 0.05
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 1 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 1 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 54 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 54 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 101 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 101 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 41 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 41 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 65 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 65 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 168 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 168 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 159 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 159 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 88 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 88 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 26 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 26 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 77 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 77 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 24 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 24 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 23 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 23 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 160 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 160 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 149 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 149 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 59 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 59 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 184 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 184 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 43 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 43 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 122 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 122 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 175 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 175 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 39 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 39 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 143 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 143 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 112 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 112 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 34 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 34 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 137 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 137 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 55 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 55 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 17 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 17 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 9 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 9 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 172 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 172 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 12 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 12 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 20 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 20 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 14 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 14 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 167 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 167 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 127 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 127 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 96 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 96 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 123 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 123 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 177 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 177 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 19 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 19 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 179 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 179 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 35 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 35 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 131 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 131 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 21 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 21 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 83 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 83 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 45 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 45 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 139 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 139 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 181 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 181 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 85 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 85 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 105 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 105 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 30 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 30 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 3 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 3 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 81 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 81 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 27 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 27 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 75 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 75 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 50 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 50 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 162 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 162 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 63 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 63 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 92 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 92 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 120 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 120 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 87 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 87 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 117 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 117 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 178 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 178 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 89 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 89 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 176 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 176 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 182 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 182 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 161 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 161 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 146 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 146 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 142 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 142 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 80 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 80 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 113 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 113 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 110 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 110 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 157 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 157 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 57 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 57 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 165 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 165 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 173 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 173 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 171 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 171 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 130 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 130 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 15 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 15 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 61 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 61 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 67 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 67 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 108 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 108 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 100 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 100 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 46 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 46 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 170 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 170 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 151 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 151 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 68 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 68 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 56 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 56 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 147 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 147 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 76 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 76 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 186 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 186 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 180 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 180 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 135 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 135 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 48 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 48 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 103 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 103 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 32 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 32 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 109 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 109 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 2 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 2 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 183 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 183 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 155 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 155 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 51 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 51 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 53 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 53 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 106 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 106 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 111 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 111 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 141 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 141 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 93 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 93 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 10 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 10 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 154 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 154 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 49 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 49 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 5 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 5 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 62 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 62 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 90 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 90 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 164 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 164 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 86 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 86 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 126 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 126 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 152 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 152 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 71 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 71 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 37 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 37 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 6 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 6 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 125 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 125 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 98 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 98 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 174 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 174 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 7 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 7 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 140 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 140 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 107 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 107 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 102 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 102 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 69 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 69 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 97 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 97 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 4 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 4 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 13 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 13 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 136 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 136 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 134 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 134 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 133 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 133 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 148 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 148 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 118 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 118 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 38 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 38 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 116 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 116 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 66 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 66 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 18 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 18 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 132 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 132 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 29 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 29 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 78 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 78 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 74 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 74 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 119 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 119 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 42 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 42 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 33 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 33 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 28 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 28 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 52 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 52 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 121 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 121 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 115 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 115 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 163 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 163 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 58 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 58 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 25 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 25 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 114 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 114 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 166 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 166 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 31 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 31 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 44 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 44 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 169 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 169 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 129 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 129 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 150 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 150 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 94 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 94 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 99 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 99 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 47 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 47 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 73 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 73 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 82 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 82 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 79 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 79 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 84 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 84 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 104 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 104 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 124 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 124 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 185 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 185 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 70 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 70 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 8 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 8 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 64 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 64 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 91 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 91 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 60 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 60 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 158 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 158 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 156 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 156 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 144 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 144 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 22 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 22 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 11 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 11 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 16 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 16 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 40 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 40 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 72 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 72 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 128 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 128 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 145 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 145 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 36 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 36 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 95 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 95 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 138 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 138 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports angmin values in -90 deg. to 90 deg., tightening the value on branch 153 from -360.0 to -60.0001403060998 deg.
WARNING: this code only supports angmax values in -90 deg. to 90 deg., tightening the value on branch 153 from 360.0 to 60.0001403060998 deg.
WARNING: this code only supports positive rate_a values, changing the value on branch 1 from 0.0 to 1076.3097073254455
WARNING: this code only supports positive rate_a values, changing the value on branch 54 from 0.0 to 2073.1060822840095
WARNING: this code only supports positive rate_a values, changing the value on branch 101 from 0.0 to 937.8135403826197
WARNING: this code only supports positive rate_a values, changing the value on branch 41 from 0.0 to 939.6370272085449
WARNING: this code only supports positive rate_a values, changing the value on branch 65 from 0.0 to 1719.2728906829977
WARNING: this code only supports positive rate_a values, changing the value on branch 168 from 0.0 to 2874.760236395906
WARNING: this code only supports positive rate_a values, changing the value on branch 159 from 0.0 to 1349.3681069636307
WARNING: this code only supports positive rate_a values, changing the value on branch 88 from 0.0 to 757.0184901077212
WARNING: this code only supports positive rate_a values, changing the value on branch 26 from 0.0 to 2728.0582543034584
WARNING: this code only supports positive rate_a values, changing the value on branch 77 from 0.0 to 1545.706871460031
WARNING: this code only supports positive rate_a values, changing the value on branch 24 from 0.0 to 2222.5789496811794
WARNING: this code only supports positive rate_a values, changing the value on branch 23 from 0.0 to 2161.757380700262
WARNING: this code only supports positive rate_a values, changing the value on branch 160 from 0.0 to 869.6328947482436
WARNING: this code only supports positive rate_a values, changing the value on branch 149 from 0.0 to 2027.4102302881622
WARNING: this code only supports positive rate_a values, changing the value on branch 59 from 0.0 to 444.42833729750913
WARNING: this code only supports positive rate_a values, changing the value on branch 184 from 0.0 to 781.2896659409479
WARNING: this code only supports positive rate_a values, changing the value on branch 43 from 0.0 to 1424.1470488145435
WARNING: this code only supports positive rate_a values, changing the value on branch 122 from 0.0 to 4493.792665868937
WARNING: this code only supports positive rate_a values, changing the value on branch 175 from 0.0 to 1385.2350342190362
WARNING: this code only supports positive rate_a values, changing the value on branch 39 from 0.0 to 687.9369460761542
WARNING: this code only supports positive rate_a values, changing the value on branch 143 from 0.0 to 845.087854408065
WARNING: this code only supports positive rate_a values, changing the value on branch 112 from 0.0 to 605.9012768015504
WARNING: this code only supports positive rate_a values, changing the value on branch 34 from 0.0 to 1282.446674043873
WARNING: this code only supports positive rate_a values, changing the value on branch 137 from 0.0 to 1548.8537363083385
WARNING: this code only supports positive rate_a values, changing the value on branch 55 from 0.0 to 1776.835681062378
WARNING: this code only supports positive rate_a values, changing the value on branch 17 from 0.0 to 1520.501671757574
WARNING: this code only supports positive rate_a values, changing the value on branch 9 from 0.0 to 3478.301099094138
WARNING: this code only supports positive rate_a values, changing the value on branch 172 from 0.0 to 589.7545543591177
WARNING: this code only supports positive rate_a values, changing the value on branch 12 from 0.0 to 5485.476000079992
WARNING: this code only supports positive rate_a values, changing the value on branch 20 from 0.0 to 1305.7201917309812
WARNING: this code only supports positive rate_a values, changing the value on branch 14 from 0.0 to 672.1706657568246
WARNING: this code only supports positive rate_a values, changing the value on branch 167 from 0.0 to 474.38001290839935
WARNING: this code only supports positive rate_a values, changing the value on branch 127 from 0.0 to 3036.7631968833552
WARNING: this code only supports positive rate_a values, changing the value on branch 96 from 0.0 to 1134.8280107899182
WARNING: this code only supports positive rate_a values, changing the value on branch 123 from 0.0 to 2186.2906452646234
WARNING: this code only supports positive rate_a values, changing the value on branch 177 from 0.0 to 1637.8817254614169
WARNING: this code only supports positive rate_a values, changing the value on branch 19 from 0.0 to 551.1216259963928
WARNING: this code only supports positive rate_a values, changing the value on branch 179 from 0.0 to 529.7227461718766
WARNING: this code only supports positive rate_a values, changing the value on branch 35 from 0.0 to 1155.581866447551
WARNING: this code only supports positive rate_a values, changing the value on branch 131 from 0.0 to 729.0434579292845
WARNING: this code only supports positive rate_a values, changing the value on branch 21 from 0.0 to 2461.3370447750417
WARNING: this code only supports positive rate_a values, changing the value on branch 83 from 0.0 to 1472.8427549671285
WARNING: this code only supports positive rate_a values, changing the value on branch 45 from 0.0 to 435.17790474164775
WARNING: this code only supports positive rate_a values, changing the value on branch 139 from 0.0 to 1096.182839700659
WARNING: this code only supports positive rate_a values, changing the value on branch 181 from 0.0 to 1480.5056899143158
WARNING: this code only supports positive rate_a values, changing the value on branch 85 from 0.0 to 425.2676885946249
WARNING: this code only supports positive rate_a values, changing the value on branch 105 from 0.0 to 386.99793960865003
WARNING: this code only supports positive rate_a values, changing the value on branch 30 from 0.0 to 2202.341913628703
WARNING: this code only supports positive rate_a values, changing the value on branch 3 from 0.0 to 13749.786276558549
WARNING: this code only supports positive rate_a values, changing the value on branch 81 from 0.0 to 790.5098745387037
WARNING: this code only supports positive rate_a values, changing the value on branch 27 from 0.0 to 1293.7294860834627
WARNING: this code only supports positive rate_a values, changing the value on branch 75 from 0.0 to 376.9501630279051
WARNING: this code only supports positive rate_a values, changing the value on branch 50 from 0.0 to 11533.162958613373
WARNING: this code only supports positive rate_a values, changing the value on branch 162 from 0.0 to 979.8591367487435
WARNING: this code only supports positive rate_a values, changing the value on branch 63 from 0.0 to 847.5975584489719
WARNING: this code only supports positive rate_a values, changing the value on branch 92 from 0.0 to 2919.0311198408435
WARNING: this code only supports positive rate_a values, changing the value on branch 120 from 0.0 to 538.2806948992016
WARNING: this code only supports positive rate_a values, changing the value on branch 87 from 0.0 to 508.5503922510439
WARNING: this code only supports positive rate_a values, changing the value on branch 117 from 0.0 to 2648.613730859383
WARNING: this code only supports positive rate_a values, changing the value on branch 178 from 0.0 to 3572.1851706256048
WARNING: this code only supports positive rate_a values, changing the value on branch 89 from 0.0 to 731.7775197713456
WARNING: this code only supports positive rate_a values, changing the value on branch 176 from 0.0 to 1428.7924040046967
WARNING: this code only supports positive rate_a values, changing the value on branch 182 from 0.0 to 10548.9783602931
WARNING: this code only supports positive rate_a values, changing the value on branch 161 from 0.0 to 1963.062273032334
WARNING: this code only supports positive rate_a values, changing the value on branch 146 from 0.0 to 1468.349860707804
WARNING: this code only supports positive rate_a values, changing the value on branch 142 from 0.0 to 689.701823304079
WARNING: this code only supports positive rate_a values, changing the value on branch 80 from 0.0 to 1096.1035548583234
WARNING: this code only supports positive rate_a values, changing the value on branch 113 from 0.0 to 2431.062977549544
WARNING: this code only supports positive rate_a values, changing the value on branch 110 from 0.0 to 3071.6923332156744
WARNING: this code only supports positive rate_a values, changing the value on branch 157 from 0.0 to 1246.023548806064
WARNING: this code only supports positive rate_a values, changing the value on branch 57 from 0.0 to 587.563250577856
WARNING: this code only supports positive rate_a values, changing the value on branch 165 from 0.0 to 680.5073793298786
WARNING: this code only supports positive rate_a values, changing the value on branch 173 from 0.0 to 3665.391335877891
WARNING: this code only supports positive rate_a values, changing the value on branch 171 from 0.0 to 1498.3629468620236
WARNING: this code only supports positive rate_a values, changing the value on branch 130 from 0.0 to 769.3335618193901
WARNING: this code only supports positive rate_a values, changing the value on branch 15 from 0.0 to 3203.3645337382827
WARNING: this code only supports positive rate_a values, changing the value on branch 61 from 0.0 to 1210.2213567927529
WARNING: this code only supports positive rate_a values, changing the value on branch 67 from 0.0 to 339.64257839451835
WARNING: this code only supports positive rate_a values, changing the value on branch 108 from 0.0 to 861.0295943701879
WARNING: this code only supports positive rate_a values, changing the value on branch 100 from 0.0 to 503.2596290470149
WARNING: this code only supports positive rate_a values, changing the value on branch 46 from 0.0 to 10759.316511162619
WARNING: this code only supports positive rate_a values, changing the value on branch 170 from 0.0 to 589.7545543591177
WARNING: this code only supports positive rate_a values, changing the value on branch 151 from 0.0 to 1180.5535888970217
WARNING: this code only supports positive rate_a values, changing the value on branch 68 from 0.0 to 566.965962997038
WARNING: this code only supports positive rate_a values, changing the value on branch 56 from 0.0 to 2211.258822460476
WARNING: this code only supports positive rate_a values, changing the value on branch 147 from 0.0 to 2476.914811195182
WARNING: this code only supports positive rate_a values, changing the value on branch 76 from 0.0 to 369.9733161845108
WARNING: this code only supports positive rate_a values, changing the value on branch 186 from 0.0 to 1977.5358400723278
WARNING: this code only supports positive rate_a values, changing the value on branch 180 from 0.0 to 1792.850390148141
WARNING: this code only supports positive rate_a values, changing the value on branch 135 from 0.0 to 1080.986732801591
WARNING: this code only supports positive rate_a values, changing the value on branch 48 from 0.0 to 759.4985930541707
WARNING: this code only supports positive rate_a values, changing the value on branch 103 from 0.0 to 1080.9862325304027
WARNING: this code only supports positive rate_a values, changing the value on branch 32 from 0.0 to 2941.3674943634587
WARNING: this code only supports positive rate_a values, changing the value on branch 109 from 0.0 to 273.0464590522494
WARNING: this code only supports positive rate_a values, changing the value on branch 2 from 0.0 to 2535.2635632241954
WARNING: this code only supports positive rate_a values, changing the value on branch 183 from 0.0 to 27646.019248005803
WARNING: this code only supports positive rate_a values, changing the value on branch 155 from 0.0 to 1851.9923211470586
WARNING: this code only supports positive rate_a values, changing the value on branch 51 from 0.0 to 2996.2730209249103
WARNING: this code only supports positive rate_a values, changing the value on branch 53 from 0.0 to 630.6753226577288
WARNING: this code only supports positive rate_a values, changing the value on branch 106 from 0.0 to 331.79674644192596
WARNING: this code only supports positive rate_a values, changing the value on branch 111 from 0.0 to 556.2835216350854
WARNING: this code only supports positive rate_a values, changing the value on branch 141 from 0.0 to 2183.3951491913695
WARNING: this code only supports positive rate_a values, changing the value on branch 93 from 0.0 to 2910.8870021938887
WARNING: this code only supports positive rate_a values, changing the value on branch 10 from 0.0 to 1562.632598148176
WARNING: this code only supports positive rate_a values, changing the value on branch 154 from 0.0 to 372.0129007219965
WARNING: this code only supports positive rate_a values, changing the value on branch 49 from 0.0 to 3987.2542753530597
WARNING: this code only supports positive rate_a values, changing the value on branch 5 from 0.0 to 2031.990187969028
WARNING: this code only supports positive rate_a values, changing the value on branch 62 from 0.0 to 794.7580475046
WARNING: this code only supports positive rate_a values, changing the value on branch 90 from 0.0 to 8168.260722067928
WARNING: this code only supports positive rate_a values, changing the value on branch 164 from 0.0 to 537.7996036011974
WARNING: this code only supports positive rate_a values, changing the value on branch 86 from 0.0 to 445.6456321677078
WARNING: this code only supports positive rate_a values, changing the value on branch 126 from 0.0 to 5541.630853871285
WARNING: this code only supports positive rate_a values, changing the value on branch 152 from 0.0 to 1015.995093984514
WARNING: this code only supports positive rate_a values, changing the value on branch 71 from 0.0 to 772.9529118572882
WARNING: this code only supports positive rate_a values, changing the value on branch 37 from 0.0 to 2221.262594882847
WARNING: this code only supports positive rate_a values, changing the value on branch 6 from 0.0 to 5275.0233352701525
WARNING: this code only supports positive rate_a values, changing the value on branch 125 from 0.0 to 1558.228075489291
WARNING: this code only supports positive rate_a values, changing the value on branch 98 from 0.0 to 1199.8377216152185
WARNING: this code only supports positive rate_a values, changing the value on branch 174 from 0.0 to 605.8465456295066
WARNING: this code only supports positive rate_a values, changing the value on branch 7 from 0.0 to 3672.2099089223852
WARNING: this code only supports positive rate_a values, changing the value on branch 140 from 0.0 to 1285.9768791844915
WARNING: this code only supports positive rate_a values, changing the value on branch 107 from 0.0 to 3036.7631968833552
WARNING: this code only supports positive rate_a values, changing the value on branch 102 from 0.0 to 3036.7631968833552
WARNING: this code only supports positive rate_a values, changing the value on branch 69 from 0.0 to 2097.112711123225
WARNING: this code only supports positive rate_a values, changing the value on branch 97 from 0.0 to 3705.865618618044
WARNING: this code only supports positive rate_a values, changing the value on branch 4 from 0.0 to 1015.398754169525
WARNING: this code only supports positive rate_a values, changing the value on branch 13 from 0.0 to 1745.3787272981792
WARNING: this code only supports positive rate_a values, changing the value on branch 136 from 0.0 to 643.3706379704828
WARNING: this code only supports positive rate_a values, changing the value on branch 134 from 0.0 to 536.7890281368119
WARNING: this code only supports positive rate_a values, changing the value on branch 133 from 0.0 to 878.6191299998814
WARNING: this code only supports positive rate_a values, changing the value on branch 148 from 0.0 to 605.881896874045
WARNING: this code only supports positive rate_a values, changing the value on branch 118 from 0.0 to 727.172902991773
WARNING: this code only supports positive rate_a values, changing the value on branch 38 from 0.0 to 1300.911917609579
WARNING: this code only supports positive rate_a values, changing the value on branch 116 from 0.0 to 874.0811872971739
WARNING: this code only supports positive rate_a values, changing the value on branch 66 from 0.0 to 339.64257839451835
WARNING: this code only supports positive rate_a values, changing the value on branch 18 from 0.0 to 439.81167905956704
WARNING: this code only supports positive rate_a values, changing the value on branch 132 from 0.0 to 1585.7109607370198
WARNING: this code only supports positive rate_a values, changing the value on branch 29 from 0.0 to 690.8671758795244
WARNING: this code only supports positive rate_a values, changing the value on branch 78 from 0.0 to 11306.055616791975
WARNING: this code only supports positive rate_a values, changing the value on branch 74 from 0.0 to 900.3036359649551
WARNING: this code only supports positive rate_a values, changing the value on branch 119 from 0.0 to 1063.8051710685556
WARNING: this code only supports positive rate_a values, changing the value on branch 42 from 0.0 to 1091.839306949605
WARNING: this code only supports positive rate_a values, changing the value on branch 33 from 0.0 to 676.5713932536721
WARNING: this code only supports positive rate_a values, changing the value on branch 28 from 0.0 to 1132.366274488577
WARNING: this code only supports positive rate_a values, changing the value on branch 52 from 0.0 to 1014.504349167563
WARNING: this code only supports positive rate_a values, changing the value on branch 121 from 0.0 to 8671.423707361786
WARNING: this code only supports positive rate_a values, changing the value on branch 115 from 0.0 to 762.5254363986535
WARNING: this code only supports positive rate_a values, changing the value on branch 163 from 0.0 to 2047.2323945223807
WARNING: this code only supports positive rate_a values, changing the value on branch 58 from 0.0 to 796.3805627796197
WARNING: this code only supports positive rate_a values, changing the value on branch 25 from 0.0 to 938.8147168840592
WARNING: this code only supports positive rate_a values, changing the value on branch 114 from 0.0 to 812.7697595673734
WARNING: this code only supports positive rate_a values, changing the value on branch 166 from 0.0 to 656.7686570183
WARNING: this code only supports positive rate_a values, changing the value on branch 31 from 0.0 to 1378.5380501404102
WARNING: this code only supports positive rate_a values, changing the value on branch 44 from 0.0 to 863.8148900723161
WARNING: this code only supports positive rate_a values, changing the value on branch 169 from 0.0 to 1989.973829749572
WARNING: this code only supports positive rate_a values, changing the value on branch 129 from 0.0 to 2931.9168441169263
WARNING: this code only supports positive rate_a values, changing the value on branch 150 from 0.0 to 1235.159028692024
WARNING: this code only supports positive rate_a values, changing the value on branch 94 from 0.0 to 5597.351041660134
WARNING: this code only supports positive rate_a values, changing the value on branch 99 from 0.0 to 1199.8377216152185
WARNING: this code only supports positive rate_a values, changing the value on branch 47 from 0.0 to 2207.3510245429275
WARNING: this code only supports positive rate_a values, changing the value on branch 73 from 0.0 to 667.0583873584427
WARNING: this code only supports positive rate_a values, changing the value on branch 82 from 0.0 to 1096.1035548583234
WARNING: this code only supports positive rate_a values, changing the value on branch 79 from 0.0 to 7080.497073407308
WARNING: this code only supports positive rate_a values, changing the value on branch 84 from 0.0 to 478.63344407020236
WARNING: this code only supports positive rate_a values, changing the value on branch 104 from 0.0 to 6996.539265422035
WARNING: this code only supports positive rate_a values, changing the value on branch 124 from 0.0 to 1030.4653972825024
WARNING: this code only supports positive rate_a values, changing the value on branch 185 from 0.0 to 2236.557259075499
WARNING: this code only supports positive rate_a values, changing the value on branch 70 from 0.0 to 1408.035197233069
WARNING: this code only supports positive rate_a values, changing the value on branch 8 from 0.0 to 4208.248624894536
WARNING: this code only supports positive rate_a values, changing the value on branch 64 from 0.0 to 566.5445423997708
WARNING: this code only supports positive rate_a values, changing the value on branch 91 from 0.0 to 1956.385373899638
WARNING: this code only supports positive rate_a values, changing the value on branch 60 from 0.0 to 649.1092982214186
WARNING: this code only supports positive rate_a values, changing the value on branch 158 from 0.0 to 612.8195239458078
WARNING: this code only supports positive rate_a values, changing the value on branch 156 from 0.0 to 1960.5504326339585
WARNING: this code only supports positive rate_a values, changing the value on branch 144 from 0.0 to 1267.6317816120977
WARNING: this code only supports positive rate_a values, changing the value on branch 22 from 0.0 to 604.9520003424465
WARNING: this code only supports positive rate_a values, changing the value on branch 11 from 0.0 to 1579.0451022348473
WARNING: this code only supports positive rate_a values, changing the value on branch 16 from 0.0 to 1470.4680534072982
WARNING: this code only supports positive rate_a values, changing the value on branch 40 from 0.0 to 3227.1307022666533
WARNING: this code only supports positive rate_a values, changing the value on branch 72 from 0.0 to 1806.2736336179096
WARNING: this code only supports positive rate_a values, changing the value on branch 128 from 0.0 to 1243.5340910356679
WARNING: this code only supports positive rate_a values, changing the value on branch 145 from 0.0 to 680.3141337301812
WARNING: this code only supports positive rate_a values, changing the value on branch 36 from 0.0 to 2895.882430017632
WARNING: this code only supports positive rate_a values, changing the value on branch 95 from 0.0 to 4192.546204652393
WARNING: this code only supports positive rate_a values, changing the value on branch 138 from 0.0 to 576.1893791692927
WARNING: this code only supports positive rate_a values, changing the value on branch 153 from 0.0 to 532.655609333354

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
Optimize a model with 2 rows, 219 columns and 2 nonzeros
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [0e+00, 0e+00]
Presolve removed 2 rows and 219 columns
Presolve time: 0.00s
Presolve: All rows and columns removed
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 0 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = 7.440766891570363
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -10.236725322379703
current_sol["val"] = -0.0379493564099481
iter = 1
z_val = 0.0
Optimize a model with 3 rows, 219 columns and 220 nonzeros
Coefficient statistics:
  Matrix range     [7e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [4e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.279591e+00   0.000000e+00      0s
       9    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 9 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.500806620312373
current_sol["val"] = -0.03431792723039394
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.473709120472422
current_sol["val"] = -0.037941361816578846
iter = 2
z_val = 0.0
Optimize a model with 5 rows, 219 columns and 656 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   4.968142e-01   0.000000e+00      0s
      19    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 19 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.4315505546499456
current_sol["val"] = -0.03432159603888042
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.9682952351399106
current_sol["val"] = -0.0379516424273058
iter = 3
z_val = 0.0
Optimize a model with 7 rows, 219 columns and 1092 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   6.749803e-01   0.000000e+00      0s
      23    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 23 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.258675637608947
current_sol["val"] = -0.034321651487022035
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.149501742314624
current_sol["val"] = -0.03795145273703372
iter = 4
z_val = 0.0
Optimize a model with 9 rows, 219 columns and 1528 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   8.010217e-01   0.000000e+00      0s
      22    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 22 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.5263646417456767
current_sol["val"] = -0.03433133429573961
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.509408785475738
current_sol["val"] = -0.03794109366858966
iter = 5
z_val = 0.0
Optimize a model with 11 rows, 219 columns and 1964 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   8.794711e-01   0.000000e+00      0s
      31    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 31 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.581090038486449
current_sol["val"] = -0.03433208548323179
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.5454697745391752
current_sol["val"] = -0.037940899327540994
iter = 6
z_val = 0.0
Optimize a model with 13 rows, 219 columns and 2400 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   8.908195e-01   0.000000e+00      0s
      41    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 41 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.9095670473004884
current_sol["val"] = -0.034332044285074415
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.7991726525047285
current_sol["val"] = -0.03794136793715442
iter = 7
z_val = 0.0
Optimize a model with 15 rows, 219 columns and 2836 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   9.635919e-01   0.000000e+00      0s
      32    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 32 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -4.1448591073034216
current_sol["val"] = -0.03432143681457843
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -4.025936947139287
current_sol["val"] = -0.03794799443380938
iter = 8
z_val = 0.0
Optimize a model with 17 rows, 219 columns and 3272 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.021349e+00   0.000000e+00      0s
      36    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 36 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -4.480097434159436
current_sol["val"] = -0.03432174381299426
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -4.699464296920647
current_sol["val"] = -0.037951400782791495
iter = 9
z_val = 0.0
Optimize a model with 19 rows, 219 columns and 3708 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.147445e+00   0.000000e+00      0s
      36    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 36 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -4.811137927327312
current_sol["val"] = -0.03432974714872973
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -4.514542704808284
current_sol["val"] = -0.03794137483935759
iter = 10
z_val = 0.0
Optimize a model with 21 rows, 219 columns and 4144 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.165709e+00   0.000000e+00      0s
      36    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 36 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -4.056294997526479
current_sol["val"] = -0.03432780275793776
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.7883414459203175
current_sol["val"] = -0.037940828513376046
iter = 11
z_val = 0.0
Optimize a model with 23 rows, 219 columns and 4580 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   9.805790e-01   0.000000e+00      0s
      51    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 51 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -5.197953093949086
current_sol["val"] = -0.03433208431795219
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -4.734677960954448
current_sol["val"] = -0.037941337672138635
iter = 12
z_val = 0.0
Optimize a model with 25 rows, 219 columns and 5016 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.241578e+00   0.000000e+00      0s
      58    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 58 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -4.647903730075757
current_sol["val"] = -0.03432906665139319
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -4.570784449196279
current_sol["val"] = -0.037940580995170385
iter = 13
z_val = 0.0
Optimize a model with 27 rows, 219 columns and 5452 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.152335e+00   0.000000e+00      0s
      45    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 45 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -4.623011061926433
current_sol["val"] = -0.03433238995337966
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -4.496437268384591
current_sol["val"] = -0.03794022758062966
iter = 14
z_val = 0.0
Optimize a model with 29 rows, 219 columns and 5888 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.139930e+00   0.000000e+00      0s
      52    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 52 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -4.415770895561783
current_sol["val"] = -0.03432135833901476
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -4.32254211818935
current_sol["val"] = -0.03794348548864723
iter = 15
z_val = 0.0
Optimize a model with 31 rows, 219 columns and 6324 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.092289e+00   0.000000e+00      0s
      51    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 51 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -4.691919270964703
current_sol["val"] = -0.03433246018779545
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -4.634497561504671
current_sol["val"] = -0.037941305333154374
iter = 16
z_val = 0.0
Optimize a model with 33 rows, 219 columns and 6760 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.165801e+00   0.000000e+00      0s
      49    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 49 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -4.578371064301472
current_sol["val"] = -0.03794091020886324
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -4.499120062644984
current_sol["val"] = -0.03433206187272273
iter = 17
z_val = 0.0
Optimize a model with 35 rows, 219 columns and 7196 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.134686e+00   0.000000e+00      0s
      54    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 54 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.2037461206554347
current_sol["val"] = -0.037941140867491605
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.46261903332105
current_sol["val"] = -0.034330946367475655
iter = 18
z_val = 0.0
Optimize a model with 37 rows, 219 columns and 7632 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   8.332951e-01   0.000000e+00      0s
      57    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 57 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.435299798223889
current_sol["val"] = -0.03794139139307487
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.677200346467274
current_sol["val"] = -0.034330369803893396
iter = 19
z_val = 0.0
Optimize a model with 39 rows, 219 columns and 8068 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   8.890619e-01   0.000000e+00      0s
      66    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 66 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.5357320753674695
current_sol["val"] = -0.037940757301384326
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.630418316490018
current_sol["val"] = -0.03433154211121175
iter = 20
z_val = 0.0
Optimize a model with 41 rows, 219 columns and 8504 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   8.957682e-01   0.000000e+00      0s
      66    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 66 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.617142994733348
current_sol["val"] = -0.0379407015299075
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.6318559336666327
current_sol["val"] = -0.03433228376847118
iter = 21
z_val = 0.0
Optimize a model with 43 rows, 219 columns and 8940 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   9.061243e-01   0.000000e+00      0s
      65    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 65 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.012931724289769
current_sol["val"] = -0.037940830572167676
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.0923264380201854
current_sol["val"] = -0.03433230791165952
iter = 22
z_val = 0.0
Optimize a model with 45 rows, 219 columns and 9376 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   7.631567e-01   0.000000e+00      0s
      82    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 82 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.621256250023248
current_sol["val"] = -0.037951428058876704
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.6259312489941067
current_sol["val"] = -0.034320947320319845
iter = 23
z_val = 0.0
Optimize a model with 47 rows, 219 columns and 9812 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   9.058979e-01   0.000000e+00      0s
      79    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 79 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.1770332896617255
current_sol["val"] = -0.037951757217733355
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.210349286900705
current_sol["val"] = -0.03431752534840014
iter = 24
z_val = 0.0
Optimize a model with 49 rows, 219 columns and 10248 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   7.984222e-01   0.000000e+00      0s
      73    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 73 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.0790446092835624
current_sol["val"] = -0.03795152559751476
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.1454992456974957
current_sol["val"] = -0.034321044694955116
iter = 25
z_val = 0.0
Optimize a model with 51 rows, 219 columns and 10684 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   7.780674e-01   0.000000e+00      0s
      61    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 61 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.4045772973655817
current_sol["val"] = -0.037951677067954735
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.466274002557932
current_sol["val"] = -0.03432131530544864
iter = 26
z_val = 0.0
Optimize a model with 53 rows, 219 columns and 11120 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   8.588558e-01   0.000000e+00      0s
      74    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 74 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.0691680479954333
current_sol["val"] = -0.03433222458282239
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.1602803405416693
current_sol["val"] = -0.037937116940930035
iter = 27
z_val = 0.0
Optimize a model with 55 rows, 219 columns and 11556 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   7.786805e-01   0.000000e+00      0s
     102    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 102 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.257072003252769
current_sol["val"] = -0.034321103525237484
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.2311467948038946
current_sol["val"] = -0.037948715111524416
iter = 28
z_val = 0.0
Optimize a model with 57 rows, 219 columns and 11992 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   8.110268e-01   0.000000e+00      0s
      88    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 88 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.892773534073707
current_sol["val"] = -0.034321544242212024
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.006177691500211
current_sol["val"] = -0.037938199356331546
iter = 29
z_val = 0.0
Optimize a model with 59 rows, 219 columns and 12428 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   7.373684e-01   0.000000e+00      0s
      83    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 83 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.8414047968051035
current_sol["val"] = -0.03794130882791972
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.0843481285395273
current_sol["val"] = -0.03433157644237752
iter = 30
z_val = 0.0
Optimize a model with 61 rows, 219 columns and 12864 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   7.407186e-01   0.000000e+00      0s
     100    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 100 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.4575407968876357
current_sol["val"] = -0.037941376298430404
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.572139821807931
current_sol["val"] = -0.034332144281609786
iter = 31
z_val = 0.0
Optimize a model with 63 rows, 219 columns and 13300 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   8.787095e-01   0.000000e+00      0s
     100    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 100 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.119868413487721
current_sol["val"] = -0.037951628470465
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.2795570041435167
current_sol["val"] = -0.034318371427795084
iter = 32
z_val = 0.0
Optimize a model with 65 rows, 219 columns and 13736 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   7.999276e-01   0.000000e+00      0s
     113    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 113 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.362010026040118
current_sol["val"] = -0.03794120526788763
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.510181254830251
current_sol["val"] = -0.03433064148536723
iter = 33
z_val = 0.0
Optimize a model with 67 rows, 219 columns and 14172 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   8.590234e-01   0.000000e+00      0s
     103    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 103 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.5187874892119826
current_sol["val"] = -0.03795043203072144
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.5577250134297174
current_sol["val"] = -0.03432160345301118
iter = 34
z_val = 0.0
Optimize a model with 69 rows, 219 columns and 14608 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   8.845635e-01   0.000000e+00      0s
      78    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 78 iterations and 0.00 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.6065236997269357
current_sol["val"] = -0.03794112884632766
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.583425955626227
current_sol["val"] = -0.034320185783742976
iter = 35
z_val = 0.0
Optimize a model with 71 rows, 219 columns and 15044 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   8.987431e-01   0.000000e+00      0s
     107    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 107 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.8683378724989956
current_sol["val"] = -0.03795057328955463
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.8723489140185383
current_sol["val"] = -0.034322579622379515
iter = 36
z_val = 0.0
Optimize a model with 73 rows, 219 columns and 15480 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   9.675852e-01   0.000000e+00      0s
     127    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 127 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.3990571100853093
current_sol["val"] = -0.037951748598591066
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.412364842291852
current_sol["val"] = -0.03794081372846785
iter = 37
z_val = 0.0
Optimize a model with 75 rows, 219 columns and 15916 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   8.514271e-01   0.000000e+00      0s
      92    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 92 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.078507704936153
current_sol["val"] = -0.037936943030819535
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.0088794568832453
current_sol["val"] = -0.034332192211097734
iter = 38
z_val = 0.0
Optimize a model with 77 rows, 219 columns and 16352 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   7.609229e-01   0.000000e+00      0s
     123    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 123 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.068305974009153
current_sol["val"] = -0.037951541108305085
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.9944823578028625
current_sol["val"] = -0.03432144192639169
iter = 39
z_val = 0.0
Optimize a model with 79 rows, 219 columns and 16788 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   7.578480e-01   0.000000e+00      0s
     126    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 126 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.1099697543002183
current_sol["val"] = -0.034332333894726494
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.190249575890624
current_sol["val"] = -0.03794066005338691
iter = 40
z_val = 0.0
Optimize a model with 81 rows, 219 columns and 17224 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   7.875268e-01   0.000000e+00      0s
     138    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 138 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.427468674894345
current_sol["val"] = -0.03433218461327367
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.4090653366683807
current_sol["val"] = -0.037941058119545734
iter = 41
z_val = 0.0
Optimize a model with 83 rows, 219 columns and 17660 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   8.545661e-01   0.000000e+00      0s
     137    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 137 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.1887628951592455
current_sol["val"] = -0.034320714067654454
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -3.172584313206205
current_sol["val"] = -0.037951459362073586
iter = 42
z_val = 0.0
Optimize a model with 85 rows, 219 columns and 18096 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   7.951678e-01   0.000000e+00      0s
     156    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 156 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.935972285054462
current_sol["val"] = -0.03432126526322449
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.9077848692849857
current_sol["val"] = -0.03795086795617244
iter = 43
z_val = 0.0
Optimize a model with 87 rows, 219 columns and 18532 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   7.304691e-01   0.000000e+00      0s
     128    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 128 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.963057877756066
current_sol["val"] = -0.034321116203102096
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.97070240325555
current_sol["val"] = -0.03795178951125941
iter = 44
z_val = 0.0
Optimize a model with 89 rows, 219 columns and 18968 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   7.417195e-01   0.000000e+00      0s
     131    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 131 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.6666981815591533
current_sol["val"] = -0.03432155040463544
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.624125737487164
current_sol["val"] = -0.037950584264703616
iter = 45
z_val = 0.0
Optimize a model with 91 rows, 219 columns and 19404 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   6.613525e-01   0.000000e+00      0s
     155    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 155 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.9243441629747657
current_sol["val"] = -0.034331939830872286
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.912699936270321
current_sol["val"] = -0.03431935818239486
iter = 46
z_val = 0.0
Optimize a model with 93 rows, 219 columns and 19840 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   7.296300e-01   0.000000e+00      0s
     151    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 151 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.764408316390833
current_sol["val"] = -0.03432101049365027
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.74989518723503
current_sol["val"] = -0.0379516703265279
iter = 47
z_val = 0.0
Optimize a model with 95 rows, 219 columns and 20276 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   6.892874e-01   0.000000e+00      0s
     117    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 117 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.587357431296291
current_sol["val"] = -0.03432155279172121
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.5473525493673
current_sol["val"] = -0.037950365568365264
iter = 48
z_val = 0.0
Optimize a model with 97 rows, 219 columns and 20712 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   6.418382e-01   0.000000e+00      0s
     165    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 165 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.450774491906661
current_sol["val"] = -0.03432456307259339
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.4261805750262773
current_sol["val"] = -0.03794955741866473
iter = 49
z_val = 0.0
Optimize a model with 99 rows, 219 columns and 21148 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   6.096189e-01   0.000000e+00      0s
     163    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 163 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.5061437583032657
current_sol["val"] = -0.03432165946228879
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.4914869505670576
current_sol["val"] = -0.03794978202558799
iter = 50
z_val = 0.0
Optimize a model with 101 rows, 219 columns and 21584 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   6.247034e-01   0.000000e+00      0s
     145    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 145 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.466515033875361
current_sol["val"] = -0.03432178093949679
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.469224266454343
current_sol["val"] = -0.03795152118303572
iter = 51
z_val = 0.0
Optimize a model with 103 rows, 219 columns and 22020 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   6.169669e-01   0.000000e+00      0s
     137    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 137 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.5067428568908827
current_sol["val"] = -0.034321594742437615
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.490679775988551
current_sol["val"] = -0.034330796264109814
iter = 52
z_val = 0.0
Optimize a model with 105 rows, 219 columns and 22456 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   6.246773e-01   0.000000e+00      0s
     153    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 153 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.4313456052570723
current_sol["val"] = -0.037940709342410735
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.3926647936900087
current_sol["val"] = -0.034331602259276464
iter = 53
z_val = 0.0
Optimize a model with 107 rows, 219 columns and 22892 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   6.030008e-01   0.000000e+00      0s
     186    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 186 iterations and 0.02 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.3524349064267063
current_sol["val"] = -0.03433228629718982
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.3251902113705736
current_sol["val"] = -0.037940315191349556
iter = 54
z_val = 0.0
Optimize a model with 109 rows, 219 columns and 23328 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   5.847027e-01   0.000000e+00      0s
     134    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 134 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.2288025590151834
current_sol["val"] = -0.03794127528776326
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.3050492107623928
current_sol["val"] = -0.0343294652163367
iter = 55
z_val = 0.0
Optimize a model with 111 rows, 219 columns and 23764 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   5.667310e-01   0.000000e+00      0s
     153    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 153 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.096915211803755
current_sol["val"] = -0.034325352836738966
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.117952595215126
current_sol["val"] = -0.03794965072869407
iter = 56
z_val = 0.0
Optimize a model with 113 rows, 219 columns and 24200 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   5.268580e-01   0.000000e+00      0s
     168    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 168 iterations and 0.02 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.0630214563452354
current_sol["val"] = -0.034332368286599135
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.022161130772188
current_sol["val"] = -0.03432118528880729
iter = 57
z_val = 0.0
Optimize a model with 115 rows, 219 columns and 24636 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   5.106474e-01   0.000000e+00      0s
     191    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 191 iterations and 0.02 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.064720081013843
current_sol["val"] = -0.0343214483105199
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.0576022096766007
current_sol["val"] = -0.03794967874972792
iter = 58
z_val = 0.0
Optimize a model with 117 rows, 219 columns and 25072 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   5.152898e-01   0.000000e+00      0s
     140    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 140 iterations and 0.01 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.3340009557167285
current_sol["val"] = -0.034321460570900304
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.263109472168959
current_sol["val"] = -0.03795025438644953
iter = 59
z_val = 0.0
Optimize a model with 119 rows, 219 columns and 25508 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   5.746383e-01   0.000000e+00      0s
     186    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 186 iterations and 0.02 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.1273891594025325
current_sol["val"] = -0.03432121166300679
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.1335106215437283
current_sol["val"] = -0.03795141931932503
iter = 60
z_val = 0.0
Optimize a model with 121 rows, 219 columns and 25944 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   5.326120e-01   0.000000e+00      0s
     162    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 162 iterations and 0.02 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.9905801760436872
current_sol["val"] = -0.034321334373037145
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.9702275036625998
current_sol["val"] = -0.03795061521549432
iter = 61
z_val = 0.0
Optimize a model with 123 rows, 219 columns and 26380 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   4.951005e-01   0.000000e+00      0s
     188    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 188 iterations and 0.02 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.9270798605048196
current_sol["val"] = -0.03432150289243713
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.916506972395556
current_sol["val"] = -0.03794974670362064
iter = 62
z_val = 0.0
Optimize a model with 125 rows, 219 columns and 26816 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   4.804479e-01   0.000000e+00      0s
     177    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 177 iterations and 0.02 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.937804385728939
current_sol["val"] = -0.03432113111975831
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.8970433164918752
current_sol["val"] = -0.037949816806545765
iter = 63
z_val = 0.0
Optimize a model with 127 rows, 219 columns and 27252 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   4.793555e-01   0.000000e+00      0s
     150    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 150 iterations and 0.02 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.8960361425206822
current_sol["val"] = -0.034331776467004416
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.921890096010692
current_sol["val"] = -0.037940218442485296
iter = 64
z_val = 0.0
Optimize a model with 129 rows, 219 columns and 27688 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   4.772403e-01   0.000000e+00      0s
     181    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 181 iterations and 0.02 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.1203774053510553
current_sol["val"] = -0.03433211081295154
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.053947999154227
current_sol["val"] = -0.03794019987981886
iter = 65
z_val = 0.0
Optimize a model with 131 rows, 219 columns and 28124 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   5.217902e-01   0.000000e+00      0s
     194    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 194 iterations and 0.02 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.0221498677018017
current_sol["val"] = -0.03433212133028637
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -2.0339928014553097
current_sol["val"] = -0.037940167215169185
iter = 66
z_val = 0.0
Optimize a model with 133 rows, 219 columns and 28560 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   5.070174e-01   0.000000e+00      0s
     215    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 215 iterations and 0.02 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.6891787625837338
current_sol["val"] = -0.0343320420638174
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.65637876270417
current_sol["val"] = -0.03794128911621917
iter = 67
z_val = 0.0
Optimize a model with 135 rows, 219 columns and 28996 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   4.181943e-01   0.000000e+00      0s
     205    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 205 iterations and 0.02 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.7024226333472063
current_sol["val"] = -0.034332321968377384
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.695097931300377
current_sol["val"] = -0.03793880541863394
iter = 68
z_val = 0.0
Optimize a model with 137 rows, 219 columns and 29432 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   4.246897e-01   0.000000e+00      0s
     198    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 198 iterations and 0.02 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.5562621660029936
current_sol["val"] = -0.034331758013325116
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.5226397018846227
current_sol["val"] = -0.03794092166175066
iter = 69
z_val = 0.0
Optimize a model with 139 rows, 219 columns and 29868 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   3.848623e-01   0.000000e+00      0s
     167    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 167 iterations and 0.02 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.8708172078347087
current_sol["val"] = -0.034321566672352886
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.8655827590570744
current_sol["val"] = -0.037951611745649906
iter = 70
z_val = 0.0
Optimize a model with 141 rows, 219 columns and 30304 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   4.670496e-01   0.000000e+00      0s
     186    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 186 iterations and 0.02 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.599996847070587
current_sol["val"] = -0.03432173656197051
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.6225393000391415
current_sol["val"] = -0.03795066840330534
iter = 71
z_val = 0.0
Optimize a model with 143 rows, 219 columns and 30740 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   4.028166e-01   0.000000e+00      0s
     137    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 137 iterations and 0.02 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.5908590984854003
current_sol["val"] = -0.03432094650616522
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.6086352985843768
current_sol["val"] = -0.037951983260296356
iter = 72
z_val = 0.0
Optimize a model with 145 rows, 219 columns and 31176 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   3.999364e-01   0.000000e+00      0s
     197    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 197 iterations and 0.03 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.5953975767430717
current_sol["val"] = -0.03432128132332439
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.5816685650022904
current_sol["val"] = -0.03795153380188216
iter = 73
z_val = 0.0
Optimize a model with 147 rows, 219 columns and 31612 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   3.971329e-01   0.000000e+00      0s
     150    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 150 iterations and 0.02 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.5800517797239524
current_sol["val"] = -0.03432120517140818
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.5407913851729165
current_sol["val"] = -0.037949182112766364
iter = 74
z_val = 0.0
Optimize a model with 149 rows, 219 columns and 32048 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   3.901050e-01   0.000000e+00      0s
     200    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 200 iterations and 0.03 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.4026521487072245
current_sol["val"] = -0.03433181031266323
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.389762167073199
current_sol["val"] = -0.037940341459123325
iter = 75
z_val = 0.0
Optimize a model with 151 rows, 219 columns and 32484 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   3.490514e-01   0.000000e+00      0s
     176    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 176 iterations and 0.03 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.363808255780306
current_sol["val"] = -0.03433209225308097
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.3506593726632559
current_sol["val"] = -0.03794064737773235
iter = 76
z_val = 0.0
Optimize a model with 153 rows, 219 columns and 32920 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   3.393081e-01   0.000000e+00      0s
     210    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 210 iterations and 0.03 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.3278176156451118
current_sol["val"] = -0.03432126021248725
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.3053245602168788
current_sol["val"] = -0.037951209000899946
iter = 77
z_val = 0.0
Optimize a model with 155 rows, 219 columns and 33356 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   3.291424e-01   0.000000e+00      0s
     161    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 161 iterations and 0.03 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.1732421482861068
current_sol["val"] = -0.0343210487116874
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.186623297315541
current_sol["val"] = -0.037949498105319106
iter = 78
z_val = 0.0
Optimize a model with 157 rows, 219 columns and 33792 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   2.949829e-01   0.000000e+00      0s
     154    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 154 iterations and 0.03 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.323400347926899
current_sol["val"] = -0.0343217299742597
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.2914807537397222
current_sol["val"] = -0.03795038586118611
iter = 79
z_val = 0.0
Optimize a model with 159 rows, 219 columns and 34228 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   3.268598e-01   0.000000e+00      0s
     164    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 164 iterations and 0.03 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.3837405553134021
current_sol["val"] = -0.03794932758211574
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.3975796699460576
current_sol["val"] = -0.03432159008275325
iter = 80
z_val = 0.0
Optimize a model with 161 rows, 219 columns and 34664 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   3.476647e-01   0.000000e+00      0s
     241    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 241 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.2878030803994918
current_sol["val"] = -0.037938102176062326
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.2796765042716214
current_sol["val"] = -0.034332049651101273
iter = 81
z_val = 0.0
Optimize a model with 163 rows, 219 columns and 35100 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   3.209346e-01   0.000000e+00      0s
     179    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 179 iterations and 0.03 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.234348069040041
current_sol["val"] = -0.0379382560282204
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.2474418263727296
current_sol["val"] = -0.03433165384636871
iter = 82
z_val = 0.0
Optimize a model with 165 rows, 219 columns and 35536 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   3.102234e-01   0.000000e+00      0s
     244    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 244 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.191335758639575
current_sol["val"] = -0.03793752680913435
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.1879349207770438
current_sol["val"] = -0.03433180776646228
iter = 83
z_val = 0.0
Optimize a model with 167 rows, 219 columns and 35972 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   2.974085e-01   0.000000e+00      0s
     185    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 185 iterations and 0.03 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.0295763022527518
current_sol["val"] = -0.037939472603227366
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.0129517728544162
current_sol["val"] = -0.03433209826853247
iter = 84
z_val = 0.0
Optimize a model with 169 rows, 219 columns and 36408 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   2.553157e-01   0.000000e+00      0s
     150    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 150 iterations and 0.03 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.918517881981458
current_sol["val"] = -0.03794826064694858
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.908278133536675
current_sol["val"] = -0.034321535612612294
iter = 85
z_val = 0.0
Optimize a model with 171 rows, 219 columns and 36844 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   2.283492e-01   0.000000e+00      0s
     214    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 214 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.8896636991857929
current_sol["val"] = -0.03794995840903317
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.8953543880802797
current_sol["val"] = -0.03432156623777092
iter = 86
z_val = 0.0
Optimize a model with 173 rows, 219 columns and 37280 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   2.231270e-01   0.000000e+00      0s
     167    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 167 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.8876056805211496
current_sol["val"] = -0.037950906525865635
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.8955684311665679
current_sol["val"] = -0.03432146677847281
iter = 87
z_val = 0.0
Optimize a model with 175 rows, 219 columns and 37716 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   2.228965e-01   0.000000e+00      0s
     147    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 147 iterations and 0.03 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.060390046643391
current_sol["val"] = -0.03433206884988917
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.055197841470174
current_sol["val"] = -0.03432156533512208
iter = 88
z_val = 0.0
Optimize a model with 177 rows, 219 columns and 38152 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   2.644482e-01   0.000000e+00      0s
     196    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 196 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.9991265595685899
current_sol["val"] = -0.03795165605145291
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.0122453116951218
current_sol["val"] = -0.03432117808878846
iter = 89
z_val = 0.0
Optimize a model with 179 rows, 219 columns and 38588 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   2.514212e-01   0.000000e+00      0s
     160    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 160 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.1027424586587318
current_sol["val"] = -0.03795042816635415
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -1.1019778169253902
current_sol["val"] = -0.03432177189684598
iter = 90
z_val = 0.0
Optimize a model with 181 rows, 219 columns and 39024 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   2.755897e-01   0.000000e+00      0s
     172    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 172 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.8618200581685674
current_sol["val"] = -0.03795178195595131
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.8577537690216235
current_sol["val"] = -0.03432137044101279
iter = 91
z_val = 0.0
Optimize a model with 183 rows, 219 columns and 39460 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   2.149464e-01   0.000000e+00      0s
     167    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 167 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.8855303324564755
current_sol["val"] = -0.03433202084371242
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.8934304428050254
current_sol["val"] = -0.037940674353169085
iter = 92
z_val = 0.0
Optimize a model with 185 rows, 219 columns and 39896 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   2.223698e-01   0.000000e+00      0s
     160    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 160 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.7578120233356814
current_sol["val"] = -0.037951878378368775
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.759944089612284
current_sol["val"] = -0.034318372150686116
iter = 93
z_val = 0.0
Optimize a model with 187 rows, 219 columns and 40332 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.897193e-01   0.000000e+00      0s
     136    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 136 iterations and 0.03 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.7145737088722817
current_sol["val"] = -0.03794975828019674
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.7170837077430302
current_sol["val"] = -0.03432132221558128
iter = 94
z_val = 0.0
Optimize a model with 189 rows, 219 columns and 40768 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.789569e-01   0.000000e+00      0s
     125    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 125 iterations and 0.03 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.7306301903808904
current_sol["val"] = -0.03466978697036719
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.723543024938833
current_sol["val"] = -0.03432160662557528
iter = 95
z_val = 0.0
Optimize a model with 191 rows, 219 columns and 41204 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.817714e-01   0.000000e+00      0s
     159    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 159 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.7430370913584042
current_sol["val"] = -0.03793909596400347
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.7438699188596196
current_sol["val"] = -0.03432164737747405
iter = 96
z_val = 0.0
Optimize a model with 193 rows, 219 columns and 41640 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.858631e-01   0.000000e+00      0s
     165    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 165 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.7517854962523591
current_sol["val"] = -0.03433228303392196
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.7524795696818836
current_sol["val"] = -0.037937738950125637
iter = 97
z_val = 0.0
Optimize a model with 195 rows, 219 columns and 42076 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.880329e-01   0.000000e+00      0s
     221    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 221 iterations and 0.06 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.6249420899545085
current_sol["val"] = -0.03432094559351221
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.625298126250541
current_sol["val"] = -0.03795128194019792
iter = 98
z_val = 0.0
Optimize a model with 197 rows, 219 columns and 42512 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.562798e-01   0.000000e+00      0s
     165    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 165 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.5400156385149643
current_sol["val"] = -0.0343215828062993
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.5392304324345482
current_sol["val"] = -0.037950348847042306
iter = 99
z_val = 0.0
Optimize a model with 199 rows, 219 columns and 42948 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.349056e-01   0.000000e+00      0s
     160    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 160 iterations and 0.05 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.5629989086053918
current_sol["val"] = -0.0343216302671695
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.5593088933944311
current_sol["val"] = -0.037951448047127224
iter = 100
z_val = 0.0
Optimize a model with 201 rows, 219 columns and 43384 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.402883e-01   0.000000e+00      0s
     168    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 168 iterations and 0.05 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.6130780168163722
current_sol["val"] = -0.03794074688792037
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.611797772533616
current_sol["val"] = -0.03433198019223426
iter = 101
z_val = 0.0
Optimize a model with 203 rows, 219 columns and 43820 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.531092e-01   0.000000e+00      0s
     169    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 169 iterations and 0.05 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.5773107311953525
current_sol["val"] = -0.03793909038774966
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.5752353146874926
current_sol["val"] = -0.034332265445346295
iter = 102
z_val = 0.0
Optimize a model with 205 rows, 219 columns and 44256 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.440680e-01   0.000000e+00      0s
     136    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 136 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.5983429400430068
current_sol["val"] = -0.03793935596884065
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.5971776760552504
current_sol["val"] = -0.03433183912034213
iter = 103
z_val = 0.0
Optimize a model with 207 rows, 219 columns and 44692 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.494399e-01   0.000000e+00      0s
     145    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 145 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.4654626292417985
current_sol["val"] = -0.037939430944721964
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.46273926125982057
current_sol["val"] = -0.03433211446240007
iter = 104
z_val = 0.0
Optimize a model with 209 rows, 219 columns and 45128 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.160250e-01   0.000000e+00      0s
     147    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 147 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.5471963329616717
current_sol["val"] = -0.03432131827703631
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.5502450287354886
current_sol["val"] = -0.03795132275653931
iter = 105
z_val = 0.0
Optimize a model with 211 rows, 219 columns and 45564 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.371800e-01   0.000000e+00      0s
     158    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 158 iterations and 0.05 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.4540868743927921
current_sol["val"] = -0.0343205154162746
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.454012948680359
current_sol["val"] = -0.03794967065708325
iter = 106
z_val = 0.0
Optimize a model with 213 rows, 219 columns and 46000 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.135123e-01   0.000000e+00      0s
     181    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 181 iterations and 0.05 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.4161032177037028
current_sol["val"] = -0.03795052235879802
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.41652832861251166
current_sol["val"] = -0.034320996331977556
iter = 107
z_val = 0.0
Optimize a model with 215 rows, 219 columns and 46436 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.040788e-01   0.000000e+00      0s
     101    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 101 iterations and 0.03 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.42306616814161174
current_sol["val"] = -0.03794102941249059
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.42343974554494695
current_sol["val"] = -0.03433176248169907
iter = 108
z_val = 0.0
Optimize a model with 217 rows, 219 columns and 46872 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.058131e-01   0.000000e+00      0s
     117    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 117 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.3156211847843987
current_sol["val"] = -0.034331631136418496
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.31512417889174854
current_sol["val"] = -0.03794037924684025
iter = 109
z_val = 0.0
Optimize a model with 219 rows, 219 columns and 47308 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   7.884303e-02   0.000000e+00      0s
     131    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 131 iterations and 0.05 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.3240976833904798
current_sol["val"] = -0.0379518358493206
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.3242400572884764
current_sol["val"] = -0.03431971636468153
iter = 110
z_val = 0.0
Optimize a model with 221 rows, 219 columns and 47744 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   8.104206e-02   0.000000e+00      0s
     157    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 157 iterations and 0.05 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.345095191350651
current_sol["val"] = -0.03433081561190137
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.3438575786949599
current_sol["val"] = -0.03794066938001072
iter = 111
z_val = 0.0
Optimize a model with 223 rows, 219 columns and 48180 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   8.611895e-02   0.000000e+00      0s
     105    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 105 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.26894842491919824
current_sol["val"] = -0.03795195769248542
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.2700526391922216
current_sol["val"] = -0.03432085277896378
iter = 112
z_val = 0.0
Optimize a model with 225 rows, 219 columns and 48616 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   6.737500e-02   0.000000e+00      0s
      91    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 91 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.3652457760908439
current_sol["val"] = -0.03433221677910612
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.36825320963870956
current_sol["val"] = -0.037939400256773705
iter = 113
z_val = 0.0
Optimize a model with 227 rows, 219 columns and 49052 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   9.168721e-02   0.000000e+00      0s
     162    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 162 iterations and 0.06 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.2787234386224947
current_sol["val"] = -0.0343201127032983
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.2774446742786292
current_sol["val"] = -0.037952022195870364
iter = 114
z_val = 0.0
Optimize a model with 229 rows, 219 columns and 49488 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   6.952089e-02   0.000000e+00      0s
     108    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 108 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.2405119644826451
current_sol["val"] = -0.03793980907342567
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.24029646860924384
current_sol["val"] = -0.0343322029708057
iter = 115
z_val = 0.0
Optimize a model with 231 rows, 219 columns and 49924 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   6.010094e-02   0.000000e+00      0s
     107    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 107 iterations and 0.05 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.18232327085629044
current_sol["val"] = -0.0343204962647245
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.18251622393211114
current_sol["val"] = -0.037951545325806336
iter = 116
z_val = 0.0
Optimize a model with 233 rows, 219 columns and 50360 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   4.560484e-02   0.000000e+00      0s
      46    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 46 iterations and 0.02 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.2448707854575745
current_sol["val"] = -0.034320890737746496
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.2458480143636529
current_sol["val"] = -0.03795036402414377
iter = 117
z_val = 0.0
Optimize a model with 235 rows, 219 columns and 50796 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   6.133973e-02   0.000000e+00      0s
     122    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 122 iterations and 0.05 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.23258403296684457
current_sol["val"] = -0.03794108739401959
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.23257337532606698
current_sol["val"] = -0.034332224518058216
iter = 118
z_val = 0.0
Optimize a model with 237 rows, 219 columns and 51232 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   5.814456e-02   0.000000e+00      0s
     101    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 101 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.16494353927166042
current_sol["val"] = -0.03795169425759701
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.16468412396279672
current_sol["val"] = -0.034320836016721736
iter = 119
z_val = 0.0
Optimize a model with 239 rows, 219 columns and 51668 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   4.120336e-02   0.000000e+00      0s
      92    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 92 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.1674521339408487
current_sol["val"] = -0.03433232245133108
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.16690426580370407
current_sol["val"] = -0.037938556793681535
iter = 120
z_val = 0.0
Optimize a model with 241 rows, 219 columns and 52104 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   4.179446e-02   0.000000e+00      0s
      73    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 73 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.17401225137868795
current_sol["val"] = -0.037941002325253104
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.17366417957202354
current_sol["val"] = -0.03433217028133845
iter = 121
z_val = 0.0
Optimize a model with 243 rows, 219 columns and 52540 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   4.345946e-02   0.000000e+00      0s
     120    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 120 iterations and 0.05 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.11610074870938365
current_sol["val"] = -0.037940691691147735
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.11586464311586109
current_sol["val"] = -0.034331784806074434
iter = 122
z_val = 0.0
Optimize a model with 245 rows, 219 columns and 52976 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   2.899561e-02   0.000000e+00      0s
      50    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 50 iterations and 0.03 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.0915179942773664
current_sol["val"] = -0.03433222192364356
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.09138880460319479
current_sol["val"] = -0.03793870197497301
iter = 123
z_val = 0.0
Optimize a model with 247 rows, 219 columns and 53412 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   2.286329e-02   0.000000e+00      0s
      98    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 98 iterations and 0.05 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.0765644580989233
current_sol["val"] = -0.034319187212487445
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.076989422082871
current_sol["val"] = -0.037951513416758315
iter = 124
z_val = 0.0
Optimize a model with 249 rows, 219 columns and 53848 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.919419e-02   0.000000e+00      0s
      72    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 72 iterations and 0.04 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.01347425855383326
current_sol["val"] = -0.037940544369076346
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.013495453985171067
current_sol["val"] = -0.03433110829457407
iter = 125
z_val = 0.0
Optimize a model with 251 rows, 219 columns and 54284 nonzeros
Coefficient statistics:
  Matrix range     [5e-04, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 5e+00]
  RHS range        [3e-02, 4e-02]
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   3.371205e-03   0.000000e+00      0s
      19    0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 19 iterations and 0.02 seconds
Optimal objective  0.000000000e+00
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.00020431296947289758
WARNING: there was an issue with getsolvetime() on the solver, falling back on @timed.  This is not a rigorous timing value.
z_val - result["objective"] / obj_tuning = -0.00020532359305185652
iter = 126
z_val = 0.0
Constraint generation converged!
elapsed time: 87.866434611 seconds
